{"version":3,"sources":["./src/app/results/results.module.ts","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/results/results-routing.module.ts"],"names":[],"mappings":"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","file":"results-results-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ResultsRoutingModule, routedComponents } from './results-routing.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ResultsRoutingModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    routedComponents,\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\n\r\nexport class ResultsModule { }\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { ExaminationService, ResultService, StandardService } from '../core/data-service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { VerifyComponent } from '../verify/verify.component';\r\nimport { environment } from '../../environments/environment';\r\nimport { NotificationService } from '../core/system-service/notification.service';\r\nimport { AlertType } from '../core/model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-results',\r\n  templateUrl: './results.component.html',\r\n  styleUrls: ['./results.component.scss']\r\n})\r\nexport class ResultsComponent implements OnInit {\r\n\r\n  @ViewChild('formDirective') private formDirective: NgForm;\r\n\r\n  isLoading = true;\r\n  resultForm: FormGroup;\r\n  examination: object;\r\n  standard: object;\r\n  result: any;\r\n  apiEndpoint: any = environment.api_endpoint;\r\n  public sendEmail = true;\r\n  displayedColumns: string[] = ['subject', 'marksObtained', 'outOf'];\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private examinationService: ExaminationService,\r\n              private resultService: ResultService,\r\n              public dialog: MatDialog,\r\n              private notificationService: NotificationService,\r\n              private standardService: StandardService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.examinationService.getExamination()\r\n      .subscribe(res => {\r\n        this.examination = res;\r\n      });\r\n\r\n    this.standardService.getStandard()\r\n    .subscribe(res => {\r\n      this.standard = res;\r\n    });\r\n    this.resultForm = this.fb.group({\r\n      examinationId: [null, [Validators.required]],\r\n      email: [null,\r\n        [Validators.required, Validators.email,\r\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]\r\n      ],\r\n      standardId: ['', [Validators.required]],\r\n      otp: [''],\r\n    });\r\n    setTimeout(() => {\r\n      this.isLoading = false;\r\n    }, 500);\r\n  }\r\n\r\n  openDialog(): void {\r\n    this.onSubmit();\r\n    const dialogRef = this.dialog.open(VerifyComponent, {\r\n      disableClose: true,\r\n      width: '350px',\r\n      data: {\r\n        email: this.resultForm.value.email,\r\n        sendEmail: this.sendEmail,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.resultForm.get('otp').setValue(+result.data.otp);\r\n      // if (result.data.message == \"Verified\") {\r\n      //   this.onSubmit();\r\n      // }\r\n    });\r\n    this.sendEmail = false;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.resultService.postResult(this.resultForm.value).subscribe(res => {\r\n      this.result = res;\r\n      this.resultForm.reset();\r\n      this.formDirective.resetForm();\r\n    }, (error) => {\r\n      this.notificationService.show(AlertType.Error, error.message);\r\n    });\r\n  }\r\n\r\n  getPercentage() {\r\n    let totalMarks = 0;\r\n    let obtainedMarks = 0;\r\n    if (this.result.data) {\r\n      for (const r of this.result.data) {\r\n        totalMarks += r.marksObtained;\r\n        obtainedMarks += r.outOf;\r\n      }\r\n    }\r\n    return `${(totalMarks / obtainedMarks * 100).toFixed(2)}%`;\r\n  }\r\n\r\n}\r\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"isLoading\"></mat-progress-bar>\r\n\r\n<div fxLayout=\"row\" fxLayout.sm=\"column\" class=\"pb-40\" fxLayout.xs=\"column\" *ngIf=\"!isLoading\">\r\n  <div class=\"div-one\" fxFlex=\"45\" fxFlex.sm=\"60\" fxFlex.xs=\"100\" align=\"center\">\r\n    <img class=\"img-div-one\" src=\"./assets/result.png\" />\r\n    <p class=\"mat-display-2 scd-font\">\r\n      VIEW YOUR <br /> RESULT HERE\r\n    </p>\r\n  </div>\r\n\r\n  <div fxFlex=\"55\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" class=\"div-two\" align=\"center\">\r\n    <p class=\"mat-display-1 scd-font mb-0\" align=\"center\"><i class=\"fas fa-poll m-10 fa-sm\"></i> Result</p>\r\n    <div class=\"form-div\">\r\n      <mat-card class=\"mb-35\">\r\n        <mat-card-content class=\"p-10\">\r\n          <mat-divider></mat-divider>\r\n          <form [formGroup]=\"resultForm\" #formDirective=\"ngForm\">\r\n            <mat-form-field appearance=\"standard\" style=\"width: 100% !important\">\r\n              <mat-label>Enter your email</mat-label>\r\n              <input matInput formControlName=\"email\">\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 100% !important\">\r\n              <mat-label>Select your standard</mat-label>\r\n              <mat-select formControlName=\"examinationId\">\r\n                <mat-option *ngFor=\"let e of examination\" value=\"{{e.id}}\" [innerHtml]=\"e.name\"></mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 100% !important\">\r\n              <mat-label>Select your exam</mat-label>\r\n              <mat-select formControlName=\"standardId\">\r\n                <mat-option *ngFor=\"let s of standard\" value=\"{{s.id}}\" [innerHtml]=\"s.name\"></mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <button mat-raised-button [disabled]=\"!resultForm.valid\" color=\"accent\" (click)=\"openDialog()\">\r\n              Verify\r\n            </button>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n      \r\n      <div *ngIf=\"result\">\r\n        <div *ngIf=\"result.message\">\r\n          <p [innerHtml]=\"result.message\"></p>\r\n        </div>\r\n        <div *ngIf=\"result.data\">\r\n            <img src=\"{{apiEndpoint + result.userImageUrl}}\" height=\"200\">\r\n          <div align=\"left\">\r\n            <p class=\"mat-subheading-2\">Name : <span [innerHtml]=\"result.username\"></span></p>\r\n          </div>\r\n          <table mat-table [dataSource]=\"result.data\" class=\"mat-elevation-z8\">\r\n            <!-- Subject Column -->\r\n            <ng-container matColumnDef=\"subject\">\r\n              <th mat-header-cell *matHeaderCellDef> Subject </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.subjectName}} </td>\r\n              <td mat-footer-cell *matFooterCellDef> Percentage </td>\r\n            </ng-container>\r\n\r\n            <!-- Marks Column -->\r\n            <ng-container matColumnDef=\"marksObtained\">\r\n              <th mat-header-cell *matHeaderCellDef> Marks Scored </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.marksObtained}} </td>\r\n              <td mat-footer-cell *matFooterCellDef> {{getPercentage()}} </td>\r\n            </ng-container>\r\n\r\n            <!-- Total Marks Column -->\r\n            <ng-container matColumnDef=\"outOf\">\r\n              <th mat-header-cell *matHeaderCellDef> Total Marks </th>\r\n              <td mat-cell *matCellDef=\"let element\"> {{element.outOf}} </td>\r\n              <td mat-footer-cell *matFooterCellDef></td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// Views\r\nimport { ResultsComponent } from './results.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ResultsComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class ResultsRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  ResultsComponent\r\n];\r\n\r\n"],"sourceRoot":"webpack:///"}